# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: PUSH to DEV

on:
  push:
    branches: "development"
    paths:
      - "srcs/**"
      - ".github/workflows/**"
  workflow_dispatch:
  
jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      ICAP_Client: ${{ steps.filter.outputs.ICAP_Client }}
      ICAP_AccountService: ${{ steps.filter.outputs.ICAP_AccountService }}
      ICAP_MarketService: ${{ steps.filter.outputs.ICAP_MarketService }}
      ICAP_RelationService: ${{ steps.filter.outputs.ICAP_RelationService }}
      ICAP_ServiceBus: ${{ steps.filter.outputs.ICAP_ServiceBus }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          ICAP_Client:
            - 'srcs/ICAP_Client/**'
          ICAP_AccountService:
            - 'srcs/ICAP_AccountService/**'
          ICAP_MarketService:
            - 'srcs/ICAP_MarketService/**'
          ICAP_RelationService:
            - 'srcs/ICAP_RelationService/**'
          ICAP_ServiceBus:
            - 'srcs/ICAP_ServiceBus/**'
  build-and-test:
    needs: filter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        services: [ICAP_Client, ICAP_AccountService, ICAP_MarketService, ICAP_RelationService, ICAP_ServiceBus]
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      if: needs.filter.outputs[matrix.services] == 'true'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
    - name: Build
      if: needs.filter.outputs[matrix.services] == 'true'
      run: |
        cd ./srcs/${{ matrix.services }}
        dotnet build $(ls *.csproj)

    - name: Unit Tests
      if: needs.filter.outputs[matrix.services] == 'true'
      run: |
        cd ./srcs/${{ matrix.services }}
        dotnet test --no-build $(ls *.csproj)

    - name: SonarCloud Scan
      if: needs.filter.outputs[matrix.services] == 'true'
      uses: highbyte/sonarscan-dotnet@v2.2.6
      with:
        # The key of the SonarQube project
        sonarProjectKey: FHICT-Owen_ICAP
        # The name of the SonarQube project
        sonarProjectName: ${{ matrix.services }}
        # The name of the SonarQube organization in SonarCloud. For hosted SonarQube, skip this setting.
        sonarOrganization: fhict-s-owen
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
